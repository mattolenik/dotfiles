# vi: ft=zsh

HOMEBREW_PREFIX="/opt/homebrew"  # Default, will be overwritten by the eval statement in _homebrew_path

_homebrew_path() {
  if is_macos; then
    local shellenv unexpected
    if [[ -f $HOMEBREW_PREFIX/bin/brew ]]; then
      shellenv="$($HOMEBREW_PREFIX/bin/brew shellenv)"
      unexpected="$(grep -Ev '^export [A-Z_]+="[A-Za-z\_\-\$\:\{\}\/\+]+' <<< "$shellenv")"
      if [[ -n $unexpected ]]; then
        print "WARNING: brew shellenv created output that looks unusual.\n         Only export statements were expected but the following was found:\n$unexpected\n\nOutput of 'brew shellenv':\n$shellenv\n"
      else
        eval "$shellenv"
      fi
    fi
  fi
}

if is_linux; then
  # TODO: asdf on Linux
fi

_asdf_path() {
  source_if_exists "$HOMEBREW_PREFIX"/Cellar/asdf/*/libexec/asdf.sh
}

_go_path() {
  GOROOT=/usr/local/go
  GOROOT="${$($GOROOT/bin/go env GOROOT 2>/dev/null):-$GOROOT}"
  if ! [[ -x $GOROOT/bin/go ]]; then
    return
  fi
  export GOROOT
  export GOPATH="${$($GOROOT/bin/go env GOPATH 2>/dev/null):-$HOME/go}"
  prepend_path "$GOROOT/bin"
  prepend_path "$GOPATH/bin"
}

_local_path() {
  export LOCAL_BIN="$HOME/.local/bin"
  prepend_path "$LOCAL_BIN"
}

_fix_path() {
  # Shift all the "standard" bin paths to the end of PATH. The default zsh /etc/profile invokes
  # /usr/libexec/path_helper, which outputs a processed path that always has these at the front,
  # circumventing PATH changes made in .zshenv.
  # In general this ensures that any additions to PATH that are meant to supercede the standard
  # paths actually work.
  path_pattern='^((\/usr\/bin)|(\/usr\/local\/bin)|(\/bin)|(\/sbin)|(\/usr\/sbin))$'
  newpath=""

  for p in $path[@]; do
    if ! [[ $p =~ $path_pattern ]]; then
      newpath+="$p:"
    fi
  done

  # Note no colon between $newpath and the next path, the for loop will leave one at the end
  export PATH="$newpath/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin"
}

install_order=(
  _fix_path
  _homebrew_path
  _asdf_path
  _go_path
  _local_path
)

for f in $install_order[@]; do
  $f
  unfunction $f
done
#echo $path

