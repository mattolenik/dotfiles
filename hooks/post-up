#!/bin/sh
[ -n "${SKIP_POST_UP:-}" ] && exit 0
set -uo

echo "PWD: $(pwd)"
. "$PWD/common.sh"

echo "DOTDIR: $DOTDIR"
echo "ZDOTDIR: $ZDOTDIR"

require git

packages="asdf bash bat chafa delta dust exa exiftool fzf jq neovim ripgrep rsync shellcheck tmux tree zsh"

# packages="jq tmux tree zsh"
# amazonlinux:2 lacks: rcm, bat chafa delta exa exiftool fzf neovim ripgrep
# does have vim, zsh 5.8.1

# packages="bat chafa delta exa exiftool fzf jq neovim ripgrep tmux tree zsh ShellCheck"
# opensuse has all of these but nvim is ancient at 0.4.4, tmux is 3.1c, jq 1.6,
# fzf 0.28, rcm 1.3.4, shellcheck 0.8.0 but the package is named ShellCheck

# packages="bat chafa delta exa exiftool fzf jq neovim ripgrep tmux tree zsh shellcheck"
# ubuntu has all but nvim is at 0.6.1, tmux is 3.2a, fzf 0.29, rcm 1.3.4, zsh 5.8, shellcheck 0.8.0

# packages="bat chafa delta exa exiftool fzf jq neovim ripgrep tmux tree zsh"
# alpine has all but asdf: nvim 0.8.1, fzf 0.35, tmux 3.3a, zsh 5.9, generally up to date

install_tpm() {
  tpm="$TMUX_PLUGIN_DIR/tpm"
  if [ ! -e "$tpm" ]; then
    git clone --depth 1 https://github.com/tmux-plugins/tpm "$tpm"
  fi
}

install_tmux_powerline() {
  tmux_powerline="$TMUX_PLUGIN_DIR/tmux-powerline"
  if [ ! -e "$tmux_powerline" ]; then
    git clone --depth 1 https://github.com/erikw/tmux-powerline "$tmux_powerline"
  fi
}

restore_scansnap_plist() {
  require rsync
  plist="Library/Preferences/com.fujitsu.pfu.ScanSnapHomeSetting.plist"
  rsync -u "$DOTDIR/$plist" "$HOME/$plist"
}


pname () { /bin/ps -o comm -p "$1" | tail -1; };

macos_packages() {
  echo brew install zsh fzf ripgrep neovim tmux
}

debian_packages() {
  echo apt install -y $packages 
}

yum_packages() {
  echo yum add -y $packages 
}

dnf_packages() {
  echo dnf add -y $packages 
}

apk_packages() {
  echo apk add -y $packages
}

packages() {
  pid=$$
  ppid="$(grep PPid: "/proc/$pid/status" | awk '{print $2}')"
  pppid="$(grep PPid: "/proc/$ppid/status" | awk '{print $2}')"
  pppname="$(pname "$pppid")"
  if [ "$pppname" != "rcup" ]; then
    return
  fi
  if is_macos; then
    macos_packages
  elif command_exists apt; then
    debian_packages
  elif command_exists yum; then
    yum_packages
  elif command_exists dnf; then
    dnf_packages
  elif command_exists apk; then
    apk_packages
  else
    printf 'Could not figure out how to bootstrap packages. Please install the following:\n%s' "$packages"
  fi
}


setup_all() {
  install_tpm
  install_tmux_powerline
  setup_macos
}

setup_macos() {
  if [ "$(uname)" != "Darwin" ]; then
    return
  fi
  restore_scansnap_plist
}

setup_all

