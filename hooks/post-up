#!/bin/sh
set -uo

echo "PWD: $(pwd)"
. "$PWD/common.sh"

echo "DOTDIR: $DOTDIR"
echo "ZDOTDIR: $ZDOTDIR"

require git

install_tpm() {
  tpm="$TMUX_PLUGIN_DIR/tpm"
  if [ ! -e "$tpm" ]; then
    git clone --depth 1 https://github.com/tmux-plugins/tpm "$tpm"
  fi
}

install_tmux_powerline() {
  tmux_powerline="$TMUX_PLUGIN_DIR/tmux-powerline"
  if [ ! -e "$tmux_powerline" ]; then
    git clone --depth 1 https://github.com/erikw/tmux-powerline "$tmux_powerline"
  fi
}

restore_scansnap_plist() {
  require rsync
  plist="Library/Preferences/com.fujitsu.pfu.ScanSnapHomeSetting.plist"
  rsync -u "$DOTDIR/$plist" "$HOME/$plist"
}

rcm_fixes() {
  # rcm doesn't link files under $DOTDIR that have the dot prefix, so symlink them manually here
  echo "Additional rcm linking..."
  for file in $(rcfixes); do
    source="$DOTDIR/$file"
    dest="$HOME/.$file"
    echo "  $dest -> $source"
    ln -sf "$source" "$dest"
  done
  echo "...done."
}


pname () { /bin/ps -o comm -p "$1" | tail -1; };

packages="zsh fzf ripgrep neovim tmux"

macos_packages() {
  echo brew install zsh fzf ripgrep neovim tmux
}

debian_packages() {
  echo apt install -y $packages 
}

yum_packages() {
  echo yum add -y $packages 
}

dnf_packages() {
  echo dnf add -y $packages 
}

apk_packages() {
  echo apk add -y $packages
}

packages() {
  pid=$$
  ppid="$(grep PPid: "/proc/$pid/status" | awk '{print $2}')"
  pppid="$(grep PPid: "/proc/$ppid/status" | awk '{print $2}')"
  pppname="$(pname "$pppid")"
  if [ "$pppname" != "rcup" ]; then
    return
  fi
  if is_macos; then
    macos_packages
  elif command_exists apt; then
    debian_packages
  elif command_exists yum; then
    yum_packages
  elif command_exists dnf; then
    dnf_packages
  elif command_exists apk; then
    apk_packages
  else
    printf 'Could not figure out how to bootstrap packages. Please install the following:\n%s' "$packages"
  fi
}


setup_all() {
  packages
  rcm_fixes
  install_tpm
  install_tmux_powerline
  if [ "$(uname)" = "Darwin" ]; then
    setup_macos
  fi
}

setup_macos() {
  restore_scansnap_plist
}

setup_all


